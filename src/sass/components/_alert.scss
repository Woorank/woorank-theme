/*
Alert

Alerts can be default, `alert-primary`, `alert-success`, `alert-warning` or `alert-error`.
Alerts can be dismissable with a close button and using `alert alert-dismissible` class.

Markup:
<div class="alert">
  <strong>Plain</strong> alert block with class="alert".
</div>
<div class="alert alert-primary">
  <strong>Plain</strong> alert block with class="alert".
</div>
<div class="alert alert-success">
  <strong>Plain</strong> alert block with class="alert".
</div>
<div class="alert alert-warning">
  <strong>Plain</strong> alert block with class="alert".
</div>
<div class="alert alert-error">
  <strong>Plain</strong> alert block with class="alert".
</div>
<div class="alert alert-primary alert-dismissible">
  <button type="button" class="close" data-dismiss="alert" aria-label="Close">
    <svg class="icon icon-cross icon-lg">
      <use xlink:href="{{{iconPath}}}#cross"></use>
    </svg>
  </button>
  <strong>Dismissible</strong> alert block with class="alert alert-dismissible".
</div>
<div class="alert alert-warning">
  <div>
    <svg class="icon icon-cross">
      <use xlink:href="{{{iconPath}}}#conversation"></use>
    </svg>
    <strong>col-xs-8</strong> alert alert-warning <strong>Lorem ipsum</strong> dolor <a href="#" class="alert-link">sit amet</a>,
    consectetur adipisicing elit. Doloremque, hic.
  </div>
</div>

Styleguide Components.Alert
*/

.alert {
  position: relative;

  @each $color, $colorValue in $colors {
    &.alert-#{$color} {
      background-color: get-variant-color($color, "smoke");
      border-color: get-variant-color($color, "dark");
      color: get-variant-color($color, "dark");

      .icon {
        fill: get-variant-color($color, "dark");
      }
    }
  }

  &:not([class*="alert-"]) {
    background-color: $grey-smoke;
    border-color: $border-color;

    .icon {
      fill: $grey-darker;
    }
  }

  .alert-link {
    color: $black;
    font-weight: $font-weight-normal;
  }

  .close {
    line-height: 0;
    opacity: 1;

    .icon {
      height: 10px;
      width: 10px;
    }
  }
}
