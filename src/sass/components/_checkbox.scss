/*
Checkbox

Button designed as checkboxes.

Markup:
<div class="checkbox-container">
  <button type="button" class="checkbox {{modifier_class}}"></button>
  <span class="checkbox-label">Text (small checkbox)</span>
</div>
<div class="checkbox-container">
  <button type="button" class="checkbox checkbox-sm {{modifier_class}}"></button>
  <span class="checkbox-label">Text (small checkbox)</span>
</div>

.default     - Default
.hovered     - Hovered
.checked     - Checked status
.remove      - Remove status
.disabled    - Disabled status
.not-allowed - Not allowed status

Styleguide Components.Checkbox
*/

.checkbox-container {
  display: inline-block;
  vertical-align: middle;

  button.checkbox {
    vertical-align: middle;
    margin-right: 5px;
  }

  .checkbox-label {
    display: inline-block;
    vertical-align: middle;
  }
}

button.checkbox {
  background-color: $grey-smoke;
  border-radius: $border-radius-base;
  border: 1px solid $grey;
  box-shadow: inset 0 0 1px 1px $white;
  display: inline-block;
  height: 18px;
  margin: 0;
  padding: 0;
  position: relative;
  transition: all 150ms ease-in;
  width: 18px;

  &.checkbox-sm {
    height: 12px;
    width: 12px;
  }

  input[type=checkbox] {
    visibility: hidden;
  }

  &:before,
  &:after {
    content: "";
    left: 50%;
    opacity: 1;
    position: absolute;
    top: 50%;
    transform-origin: 0 0;
    transform: translateY(-50%) translateX(-50%);
    transition: all 150ms ease-in;
  }

  &:hover,
  &.hovered {
    background-color: $white;
    box-shadow: inset 0 0 1px 1px $grey-smoke;

    &:before,
    &:after {
      background-color: $primary;
      border-radius: 50%;
      height: 0;
      width: 0;
      padding: 2px;
    }
  }

  &.remove {
    background-color: $white;
    box-shadow: inset 0 0 1px 1px $grey-smoke;

    &:before,
    &:after {
      background-color: $primary;
      border-radius: 1px;
      height: 2px;
      left: 50%;
      top: 50%;
      transform: translateY(-50%) translateX(-50%);
      width: 6px;
      padding: 0;
    }
  }

  &.checked {
    background-color: $primary;
    border-color: $primary;
    box-shadow: inset 0 0 1px 0 $primary;

    &:focus,
    &.focused {
      box-shadow: inset 0 0 1px 0 $primary, 0 0 3px $grey-lighter;
    }

    &:before,
    &:after {
      background-color: $white;
      border-radius: 0;
      height: 2px;
      padding: 0;
    }

    &:before {
      left: 4px;
      top: 6px;
      transform: rotate(45deg);
      width: 6px;
    }

    &:after {
      left: 6px;
      top: 11px;
      transform: rotate(-45deg);
      width: 10px;
    }

    &.checkbox-sm {
      &:before {
        left: 2px;
        top: 3px;
        width: 4px;
      }

      &:after {
        left: 3px;
        top: 7px;
        width: 7px;
      }
    }
  }

  &:focus,
  &.focused {
    border-color: $primary;
    box-shadow: inset 0 0 1px 1px $grey-smoke, 0 0 3px $grey-lighter;
  }

  &:disabled,
  &.disabled {
    background-color: $grey-smoke;
    border-color: $grey-light;
    box-shadow: inset 0 0 1px 1px $white;
    cursor: not-allowed;

    &:before,
    &:after {
      opacity: 0;
    }

    &:hover,
    &.hovered,
    &:focus,
    &.focused {
      &:before,
      &:after {
        background-color: $grey-light;
        border-radius: 0;
        height: 2px;
        left: 50%;
        opacity: 1;
        top: 50%;
        width: 16px;
        padding: 0;
      }

      &:before {
        transform: rotate(45deg) translateX(-50%) translateY(-50%);
      }

      &:after {
        transform: rotate(-45deg) translateX(-50%) translateY(-50%);
      }
    }

    &.checkbox-sm {
      &:before,
      &:after {
        width: 9px;
      }
    }
  }

  &.not-allowed {
    background-color: $grey-smoke;
    border-color: $grey-light;
    box-shadow: inset 0 0 1px 1px $white;
    cursor: not-allowed;

    &.checkbox-sm {
      &:before,
      &:after {
        width: 9px;
      }
    }

    &:before,
    &:after {
      background-color: $grey-light;
      border-radius: 0;
      height: 2px;
      left: 50%;
      opacity: 1;
      top: 50%;
      width: 15px;
      padding: 0;
    }

    &:before {
      transform: rotate(45deg) translateX(-50%) translateY(-50%);
    }

    &:after {
      transform: rotate(-45deg) translateX(-50%) translateY(-50%);
    }
  }
}
