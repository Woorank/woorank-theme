/*
Helpers

You can set any **available** colors using classes likes: `color-primary`, `background-primary` or `fill-primary`

Use: `.background-`, `.fill-` or `.color-` + any **available** colors.
You can force a custom color by adding a `-important` as class suffix.

Markup:
<div class="page-header background-primary-smoke">
  <h1 class="color-primary-important">
    <svg class="icon icon-conversation icon-medium fill-primary">
      <use xlink:href="#conversation"></use>
    </svg>
    Title with custom icon fill, background, text color
  </h1>
  <button class="btn btn-turquoise">And Buttons</button>
</div>

Weight: 4

Styleguide Colors.Helpers
*/

@each $color, $colorValue in $colors {
  .color-#{$color} {
    color: $colorValue;
  }
  .fill-#{$color} {
    fill: $colorValue;
  }
  .background-#{$color} {
    background-color: $colorValue;
  }
  .btn-#{$color} { // Respect button contrast
    @if (str-index($color, 'white') or str-index($color, 'light') or str-index($color, 'lighter') or str-index($color, 'smoke') ) {
      color: $grey-darker !important;
      background-color: $colorValue !important;
      &:hover,
      &:active,
      &:focus {
        color: $grey-darker !important;
        background-color: darken($colorValue, 5%) !important;
      }
      .icon {
        fill: $grey-darker !important;
      }
    } @else {
      color: $white !important;
      background-color: $colorValue !important;
      &:hover,
      &:active,
      &:focus {
        color: $white !important;
        background-color: darken($colorValue, 5%) !important;
      }
      .icon {
        fill: $white !important;
      }
    }
  }

  // forced colors
  .color-#{$color}-important {
    color: $colorValue !important;
  }
  .fill-#{$color}-important {
    fill: $colorValue !important;
  }
  .background-#{$color}-important {
    background-color: $colorValue !important;
  }
  .btn-#{$color}-important {
    color: $white;
    background-color: $colorValue;
  }
}

@each $color, $colorValue in $thirdPartyColors {
  .color-#{$color} {
    color: $colorValue;
  }
  .fill-#{$color} {
    fill: $colorValue;
  }
  .background-#{$color} {
    background-color: $colorValue;
  }
  .btn-#{$color} {
    color: $white;
    background-color: $colorValue;
  }

  // forced colors
  .color-#{$color}-important {
    color: $colorValue !important;
  }
  .fill-#{$color}-important {
    fill: $colorValue !important;
  }
  .background-#{$color}-important {
    background-color: $colorValue !important;
  }
  .btn-#{$color}-important {
    color: $white;
    background-color: $colorValue;
  }
}
