// BASES MIXINS

@mixin breakpoint($size: $screen-lg, $reverse: false) {
  @if($reverse) {
    @media screen and (max-width: #{$size}) {
      @content;
    }
  } @else {
    @media screen and (min-width: #{$size}) {
      @content;
    }
  }
}

@mixin calc($property, $expression) {
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}

@function get-variant-color($base, $arg) {
  @for $i from 1 through length($colors) {
    $color: nth($colors, $i);
    @if "#{$base}-#{$arg}" == nth($color, 1) {
      @return nth($color, 2);
    }
  }
  @return null;
}

@function get-color-value($name) {
  @for $i from 1 through length($colors) {
    $color: nth($colors, $i);
    @if nth($color, 1) == $name {
      @return nth($color, 2);
    }
  }
  @return null;
}

@function get-original-color($variant) {
  @each $primaryColor, $variantsMap in $colorsMap {
    @each $name, $value in $variantsMap {
      @if $name == $variant {
        @return get-color-value($primaryColor);
      }
    }
  }
  @return null;
}

@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

@mixin radius($radius) {
  border-radius: $radius;
}
