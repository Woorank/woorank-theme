// BASES MIXINS

@mixin breakpoint($size: $screen-lg, $reverse: false) {
  @if ($reverse) {
    @media screen and (max-width: #{$size}) {
      @content;
    }
  }

  @else {
    @media screen and (min-width: #{$size}) {
      @content;
    }
  }
}

@mixin calc($property, $expression) {
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}

@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

@mixin radius($radius) {
  border-radius: $radius;
}

@mixin vh-polyfill($property, $vh, $add: null) {
  $media-queries:
    "all and (device-width: 768px) and (device-height: 1024px) and (orientation:portrait)", // iPad with portrait orientation.
    "all and (device-width: 768px) and (device-height: 1024px) and (orientation:landscape)", // iPad with landscape orientation.
    "screen and (device-aspect-ratio: 40/71)", // iPhone 5 You can also target devices with aspect ratio.
    "screen and (device-width: 320px) and (device-aspect-ratio: 2/3) and (orientation:portrait)"; // iPhone 4

  $heights: 1024px, 768px, 500px, 480px;

  $i: 1;

  @if $add == null {
    #{$property}: $vh * 1vh;

    @each $media-query in $media-queries {
      @media #{$media-query} {
        #{$property}: round(nth($heights, $i) * $vh / 100);
      }
      $i: $i + 1;
    }
  }

  @else {
    @if $add > 0 {
      #{$property}: calc(#{$vh * 1vh} + #{$add});
    }

    @else {
      #{$property}: calc(#{$vh * 1vh} - #{$add * -1});
    }

    @each $media-query in $media-queries {
      @media #{$media-query} {
        #{$property}: #{round(nth($heights, $i) * $vh / 100) + $add};
      }
      $i: $i + 1;
    }
  }
}

@mixin hide-table-column ($column-list, $size) {
  @if $column-list != null {
    thead > tr th,
    tbody > tr td {
      @each $current-column in $column-list {
        &:nth-child(#{$current-column}) {
          display: none;

          @media screen and (min-width: #{$size}) {
            display: table-cell;
          }
        }
      }
    }
  }
}

@mixin retina() {
  @media
    only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (-min-moz-device-pixel-ratio: 2),
    only screen and (-o-min-device-pixel-ratio: 2/1),
    only screen and (-min-device-pixel-ratio: 2),
    only screen and (min-resolution: 192dpi),
    only screen and (min-resolution: 2dppx) {
    @content;
  }
}

@mixin pretty-text-overflow($max-width: null) {
  @if $max-width != null {
    max-width: $max-width;
    display: inline-block;
  }

  text-overflow: ellipsis;
  white-space: nowrap;
  overflow-x: hidden;
}
